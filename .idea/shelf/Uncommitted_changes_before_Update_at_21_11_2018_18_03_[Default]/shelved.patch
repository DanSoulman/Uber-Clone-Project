Index: app/src/main/java/com/example/admin/loginguitest/SignUpController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.admin.loginguitest\r\n\r\n\r\nimport android.content.Intent\r\nimport android.support.v7.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount\r\nimport java.util.HashMap\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\r\nimport com.google.android.gms.common.api.ApiException\r\nimport com.google.firebase.auth.*\r\nimport com.google.firebase.auth.FirebaseUser\r\nimport com.google.firebase.auth.AuthResult\r\nimport com.google.android.gms.tasks.Task\r\nimport android.support.annotation.NonNull\r\nimport android.support.v4.app.FragmentActivity\r\nimport com.google.android.gms.tasks.OnCompleteListener\r\nimport com.google.firebase.auth.GoogleAuthProvider\r\nimport com.google.firebase.auth.AuthCredential\r\n\r\n\r\n\r\n\r\nclass SignUpController : AppCompatActivity() {\r\n\r\n    lateinit var nameTextField: TextView\r\n    lateinit var emailTextField: TextView\r\n    lateinit var passwordTextField: TextView\r\n    lateinit var passwordTextField1: TextView\r\n\r\n    lateinit var submit: Button\r\n    lateinit var facebook: Button\r\n    lateinit var twitter: Button\r\n\r\n    lateinit var name: String\r\n    private val RC_SIGN_IN = 1\r\n\r\n    //TODO: add variable to store number\r\n\r\n    lateinit var fb: FirebaseAuth\r\n\r\n    companion object {\r\n        var TAG = \"SignUpActivity\"\r\n        var dbRef: FirebaseFirestore = FirebaseFirestore.getInstance()\r\n    }\r\n\r\n    //TODO: Add the Mobile number Info here\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_sign_up_controller)\r\n\r\n        fb = FirebaseAuth.getInstance()\r\n\r\n        nameTextField = findViewById(R.id.nameTextField) as TextView\r\n        emailTextField = findViewById(R.id.emailTextField) as TextView\r\n        passwordTextField = findViewById(R.id.passwordTextField) as TextView\r\n        passwordTextField1 = findViewById(R.id.passwordTextField1) as TextView\r\n        //TODO: call it numberTextField\r\n    }\r\n\r\n    fun signUpService(v: View) {\r\n        if (signUpFieldsEmpty() == false) {\r\n\r\n            var passwordFieldOne: String = passwordTextField.text.toString()\r\n            var passwordFieldTwo: String = passwordTextField1.text.toString()\r\n\r\n            if (passwordFieldTwo.equals(passwordFieldOne)) {\r\n\r\n                signUpToAuth(emailTextField.text.toString(), passwordTextField.text.toString())\r\n                name = nameTextField.text.toString()\r\n                //TODO: read in numberTextField to number\r\n\r\n                clearText()\r\n            } else {\r\n                Toast.makeText(baseContext, \"Make sure passwords match\",\r\n                        Toast.LENGTH_SHORT).show()\r\n\r\n\r\n                clearText()\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private fun signUpToAuth(email: String, password: String) {\r\n        fb.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this) { task ->\r\n                    if (task.isSuccessful) {\r\n\r\n                        Log.d(TAG, \"createUserWithEmail: success\")\r\n                        val user = fb.currentUser\r\n                        Toast.makeText(baseContext, \"Authentication Success\",\r\n                                Toast.LENGTH_SHORT).show()\r\n\r\n                        fireStoreSignUp()\r\n\r\n                    } else {\r\n                        // If sign in fails, display a message to the user.\r\n                        Log.w(TAG, \"createUserWithEmail:failure\", task.exception)\r\n                        Toast.makeText(baseContext, \"Authentication Failed\",\r\n                                Toast.LENGTH_SHORT).show()\r\n\r\n                        try {\r\n                            throw task.exception!!\r\n                        } catch (weakPassword: FirebaseAuthWeakPasswordException) {\r\n                            Log.d(TAG, \"onComplete: weak_password\")\r\n                            passwordTextField.error = \"Do not enter a weak password\"\r\n\r\n\r\n                        }\r\n                        // if user enters wrong password.\r\n                        catch (malformedEmail: FirebaseAuthInvalidCredentialsException) {\r\n                            Log.d(TAG, \"onComplete: malformed_email\")\r\n                            emailTextField.error = \"Do not enter a malformed email\"\r\n\r\n\r\n                        } catch (existEmail: FirebaseAuthUserCollisionException) {\r\n                            Log.d(TAG, \"onComplete: exist_email\")\r\n                            emailTextField.error = \"This email already exists, log in with your account\"\r\n\r\n\r\n                        } catch (e: Exception) {\r\n                            Log.d(TAG, \"onComplete: \" + e.message)\r\n                        }\r\n                    }\r\n\r\n                    // ...\r\n                }\r\n    }\r\n\r\n    private fun fireStoreSignUp() {\r\n        var dataToSave: MutableMap<String, String> = HashMap<String, String>()\r\n\r\n        //val tm = getSystemService(Context.TELEPHONY_SERVICE) as TelephonyManager\r\n\r\n        //var number : String?\r\n\r\n        /*\r\n        try {\r\n            number = tm.line1Number\r\n\r\n        }\r\n        catch(s : SecurityException){\r\n           number = null\r\n\r\n        }\r\n        */\r\n\r\n        dataToSave.put(\"name\", name)\r\n        //dataToSave.put(\"lastname\", name[1])\r\n        dataToSave.put(\"email\", fb.currentUser!!.email!!)\r\n\r\n        //TODO: dataToSave.put(\"mobile\", number!!) Have a text field called number, pull the phone number\r\n\r\n        dbRef.collection(\"Users\").add(dataToSave as Map<String, String>)\r\n\r\n\r\n    }\r\n\r\n    private fun signUpFieldsEmpty(): Boolean {\r\n        //TODO: Add ability to check if number field empty\r\n        if (nameTextField.text.isBlank() || emailTextField.text.isBlank() || passwordTextField.text.isBlank() || passwordTextField1.text.isBlank()) {\r\n            Toast.makeText(baseContext, \"Please do not leave ANY field Empty.\", Toast.LENGTH_SHORT).show()\r\n            clearText()\r\n            return true\r\n\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    //LOGGING IN THROUGH GOOGLE PLUS --------------------------------------------\r\n    fun signUpViaGoogle(v: View) {\r\n        // Configure sign-in to request the user's ID, email address, and basic\r\n        // profile. ID and basic profile are included in DEFAULT_SIGN_IN.\r\n\r\n        Log.d(TAG, \"Signing up Via Google\")\r\n        val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                //TODO: FIX This one bastard of a line by putting WebID in somewhere\r\n                //.requestIdToken(\"146078760213-01dddiigen9ds5a13it2qbokshd89jer.apps.googleusercontent.com\")\r\n                //Client ID WebClient 146078760213-01dddiigen9ds5a13it2qbokshd89jer.apps.googleusercontent.com\r\n                //App 146078760213-v5evi53aeuckik8hnapcp835altrghtu.apps.googleusercontent.com\r\n                .requestEmail()\r\n                .build()\r\n\r\n\r\n        // Build a GoogleSignInClient with the options specified by gso.\r\n        var mGoogleSignInClient = GoogleSignIn.getClient(this, gso)\r\n        val signInIntent = mGoogleSignInClient.signInIntent\r\n\r\n\r\n        startActivityForResult(signInIntent, RC_SIGN_IN)\r\n\r\n    }\r\n\r\n\r\n    public override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        if (requestCode == RC_SIGN_IN) {\r\n            val task: Task<GoogleSignInAccount> = GoogleSignIn.getSignedInAccountFromIntent(data)\r\n            handleSignInResult(task)\r\n        } else {\r\n            Toast.makeText(this, \"Problem in execution order :(\", Toast.LENGTH_LONG).show()\r\n        }\r\n    }\r\n\r\n    private fun handleSignInResult(completedTask: Task<GoogleSignInAccount>) {\r\n        try {\r\n            val account: GoogleSignInAccount = completedTask.getResult(ApiException::class.java)!!\r\n            updateUI(account)\r\n        } catch (e: ApiException) {\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_LONG).show()\r\n        }\r\n    }\r\n\r\n    private fun updateUI(user: GoogleSignInAccount?) {\r\n\r\n        val acct = GoogleSignIn.getLastSignedInAccount(applicationContext)\r\n        if (acct != null) {\r\n            val personName = acct.displayName\r\n            val personGivenName = acct.givenName\r\n            val personFamilyName = acct.familyName\r\n            val personEmail = acct.email\r\n            val personId = acct.id\r\n            val personPhoto = acct.photoUrl\r\n\r\n            Toast.makeText(this, \"Name of the user :$personName user id is : $personId\", Toast.LENGTH_SHORT).show()\r\n\r\n        }\r\n\r\n\r\n    }\r\n    private fun clearText() {\r\n        nameTextField.text = \"\"\r\n        emailTextField.text = \"\"\r\n        passwordTextField.text = \"\"\r\n        passwordTextField1.text = \"\"\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/admin/loginguitest/SignUpController.kt	(revision 961be810ffc51659fb378a8c83a65b1cc3ee16ce)
+++ app/src/main/java/com/example/admin/loginguitest/SignUpController.kt	(date 1542815050475)
@@ -186,9 +186,9 @@
 
         Log.d(TAG, "Signing up Via Google")
         val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
-                .requestIdToken(getString(R.string.default_web_client_id))
+                //.requestIdToken(getString(R.string.default_web_client_id))
                 //TODO: FIX This one bastard of a line by putting WebID in somewhere
-                //.requestIdToken("146078760213-01dddiigen9ds5a13it2qbokshd89jer.apps.googleusercontent.com")
+                .requestIdToken("146078760213-01dddiigen9ds5a13it2qbokshd89jer.apps.googleusercontent.com")
                 //Client ID WebClient 146078760213-01dddiigen9ds5a13it2qbokshd89jer.apps.googleusercontent.com
                 //App 146078760213-v5evi53aeuckik8hnapcp835altrghtu.apps.googleusercontent.com
                 .requestEmail()
